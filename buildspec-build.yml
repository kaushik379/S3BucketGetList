version: 0.2

env:
  variables:
    IMAGE_REPO_NAME: "demoimages" # This is now passed from the project environment

phases:
  pre_build:
    commands:
      - echo "Starting the pre_build stage..."
      - IMAGE_TAG=latest
      - echo latest > image_tag.txt

  build:
    commands:
      - docker build -t $IMAGE_REPO_NAME:latest .

  post_build:
    commands:
      - echo "Pushing Docker image to each target account..."
      - |
        # THE FIX: Loop over the TARGETS variable which contains "account:region" pairs
        for target in $TARGETS; do
          # THE FIX: Parse the account ID and region from the pair
          account_id=$(echo $target | cut -d':' -f1)
          target_region=$(echo $target | cut -d':' -f2)

          echo "-------------------------"
          echo "Pushing to Account: $account_id in Region: $target_region"
          echo "-------------------------"
          
          # THE FIX: Construct the ECR URI using the parsed target_region
          TARGET_ECR_URI="$account_id.dkr.ecr.$target_region.amazonaws.com/$IMAGE_REPO_NAME"

          echo "Assuming role for account $account_id..."
          CREDS=$(aws sts assume-role --role-arn arn:aws:iam::$account_id:role/RND-trust-role-lambda-ecr --role-session-name "BuildStagePush-$account_id")
          export AWS_ACCESS_KEY_ID=$(echo $CREDS | jq -r .Credentials.AccessKeyId)
          export AWS_SECRET_ACCESS_KEY=$(echo $CREDS | jq -r .Credentials.SecretAccessKey)
          export AWS_SESSION_TOKEN=$(echo $CREDS | jq -r .Credentials.SessionToken)

          echo "Login to ECR for $account_id..."
          # THE FIX: Use the target_region for the login command
          aws ecr get-login-password --region $target_region | docker login --username AWS --password-stdin $TARGET_ECR_URI

          echo "Tagging and pushing image to $TARGET_ECR_URI:latest"
          docker tag $IMAGE_REPO_NAME:latest $TARGET_ECR_URI:latest
          docker push $TARGET_ECR_URI:latest

          unset AWS_ACCESS_KEY_ID
          unset AWS_SECRET_ACCESS_KEY
          unset AWS_SESSION_TOKEN
        done
      - echo "{\"tag\":\"latest\"}" > imageDetail.json

artifacts:
  files:
    - image_tag.txt
    - imageDetail.json
