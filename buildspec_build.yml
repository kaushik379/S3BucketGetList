# File: buildspec_build.yml
version: 0.2

env:
  variables:
    AWS_REGION: "us-east-1"
    TARGET_ACCOUNT_IDS: "861530259719 418272799989"
    IMAGE_REPO_NAME: "demoimages"

phases:
  pre_build:
    commands:
      - echo "Starting the build process..."
      - COMMIT_ID=$(echo $CODEBUILD_RESOLVED_SOURCE_VERSION | cut -c1-7)
      - export IMAGE_TAG=$COMMIT_ID
      - 'echo "GitHub Commit ID: $IMAGE_TAG"'

  build:
    commands:
      - echo "Building the Docker image with tag $IMAGE_TAG..."
      - docker build -t $IMAGE_REPO_NAME:$IMAGE_TAG .

  post_build:
    commands:
      - echo "Logging into ECR and pushing to each account..."
      - |
        set -e
        for account_id in $TARGET_ACCOUNT_IDS; do
          echo "--- Processing Account: $account_id ---"
          TARGET_ECR_URI="$account_id.dkr.ecr.$AWS_REGION.amazonaws.com/$IMAGE_REPO_NAME"
          
          echo "Assuming role in account $account_id..."
          ROLE_ARN="arn:aws:iam::$account_id:role/Ai-house-ecr-lambda-sts"
          CREDS=$(aws sts assume-role --role-arn $ROLE_ARN --role-session-name "CodeBuild-Push-Session")
          export AWS_ACCESS_KEY_ID=$(echo $CREDS | jq -r .Credentials.AccessKeyId)
          export AWS_SECRET_ACCESS_KEY=$(echo $CREDS | jq -r .Credentials.SecretAccessKey)
          export AWS_SESSION_TOKEN=$(echo $CREDS | jq -r .Credentials.SessionToken)
          
          echo "Logging into ECR..."
          aws ecr get-login-password --region $AWS_REGION | docker login --username AWS --password-stdin "$account_id.dkr.ecr.$AWS_REGION.amazonaws.com"
          
          echo "Tagging and Pushing image to $TARGET_ECR_URI..."
          docker tag $IMAGE_REPO_NAME:$IMAGE_TAG $TARGET_ECR_URI:$IMAGE_TAG
          docker push $TARGET_ECR_URI:$IMAGE_TAG
          
          unset AWS_ACCESS_KEY_ID AWS_SECRET_ACCESS_KEY AWS_SESSION_TOKEN
        done
      # Create an artifact file for the next stage
      - printf '{"imageTag":"%s"}' $IMAGE_TAG > image_detail.json

artifacts:
  files:
    - image_detail.json
