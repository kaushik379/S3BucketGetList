# File: buildspec_deploy.yml
version: 0.2

phases:
  pre_build:
    commands:
      # Read the image tag from the input artifact created by the build stage
      - echo "Reading image tag from artifact..."
      - export IMAGE_TAG=$(jq -r '.imageTag' image_detail.json)
      - 'echo "Deploying image with tag: $IMAGE_TAG"'

  build:
    commands:
      - echo "Deploying to Lambda in each account..."
      - |
        set -e
        for account_id in $TARGET_ACCOUNT_IDS; do
          echo "--- Processing Account: $account_id ---"
          TARGET_ECR_URI="$account_id.dkr.ecr.$AWS_REGION.amazonaws.com/$IMAGE_REPO_NAME"
          
          echo "Assuming role in account $account_id..."
          ROLE_ARN="arn:aws:iam::$account_id:role/Ai-house-ecr-lambda-sts"
          CREDS=$(aws sts assume-role --role-arn $ROLE_ARN --role-session-name "CodeBuild-Deploy-Session")
          export AWS_ACCESS_KEY_ID=$(echo $CREDS | jq -r .Credentials.AccessKeyId)
          export AWS_SECRET_ACCESS_KEY=$(echo $CREDS | jq -r .Credentials.SecretAccessKey)
          export AWS_SESSION_TOKEN=$(echo $CREDS | jq -r .Credentials.SessionToken)
          
          echo "Fetching image digest for tag $IMAGE_TAG..."
          IMAGE_DIGEST=$(aws ecr describe-images --repository-name $IMAGE_REPO_NAME --image-ids imageTag=$IMAGE_TAG --query 'imageDetails[0].imageDigest' --output text)
          
          echo "Updating Lambda function '$LAMBDA_FUNCTION_NAME'..."
          aws lambda update-function-code --function-name $LAMBDA_FUNCTION_NAME --image-uri "$TARGET_ECR_URI@$IMAGE_DIGEST"
          echo "Lambda function updated."
          
          unset AWS_ACCESS_KEY_ID AWS_SECRET_ACCESS_KEY AWS_SESSION_TOKEN
        done
